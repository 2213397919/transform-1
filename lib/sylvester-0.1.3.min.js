// === Sylvester ===
// Vector and Matrix mathematics modules for JavaScript
// Copyright (c) 2007 James Coglan
// 
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

var Sylvester={version:"0.1.3",precision:0.000001};function Vector(){}Vector.prototype={e:function(a){return(a<1||a>this.elements.length)?null:this.elements[a-1]},dimensions:function(){return this.elements.length},modulus:function(){return Math.sqrt(this.dot(this))},eql:function(b){var c=this.elements.length;var a=b.elements||b;if(c!=a.length){return false}do{if(Math.abs(this.elements[c-1]-a[c-1])>Sylvester.precision){return false}}while(--c);return true},dup:function(){return Vector.create(this.elements)},map:function(a){var b=[];this.each(function(c,d){b.push(a(c,d))});return Vector.create(b)},each:function(c){var d=this.elements.length,a=d,b;do{b=a-d;c(this.elements[b],b+1)}while(--d)},toUnitVector:function(){var a=this.modulus();if(a===0){return this.dup()}return this.map(function(b){return b/a})},angleFrom:function(d){var e=d.elements||d;var c=this.elements.length,f=c,g;if(c!=e.length){return null}var a=0,l=0,h=0;this.each(function(k,m){a+=k*e[m-1];l+=k*k;h+=e[m-1]*e[m-1]});l=Math.sqrt(l);h=Math.sqrt(h);if(l*h===0){return null}var b=a/(l*h);if(b<-1){b=-1}if(b>1){b=1}return Math.acos(b)},isParallelTo:function(a){var b=this.angleFrom(a);return(b===null)?null:(b<=Sylvester.precision)},isAntiparallelTo:function(a){var b=this.angleFrom(a);return(b===null)?null:(Math.abs(b-Math.PI)<=Sylvester.precision)},isPerpendicularTo:function(a){var b=this.dot(a);return(b===null)?null:(Math.abs(b)<=Sylvester.precision)},add:function(b){var a=b.elements||b;if(this.elements.length!=a.length){return null}return this.map(function(c,d){return c+a[d-1]})},subtract:function(b){var a=b.elements||b;if(this.elements.length!=a.length){return null}return this.map(function(c,d){return c-a[d-1]})},multiply:function(a){return this.map(function(b){return b*a})},x:function(a){return this.multiply(a)},dot:function(b){var a=b.elements||b;var c,d=0,e=this.elements.length;if(e!=a.length){return null}do{d+=this.elements[e-1]*a[e-1]}while(--e);return d},cross:function(b){var c=b.elements||b;if(this.elements.length!=3||c.length!=3){return null}var a=this.elements;return Vector.create([(a[1]*c[2])-(a[2]*c[1]),(a[2]*c[0])-(a[0]*c[2]),(a[0]*c[1])-(a[1]*c[0])])},max:function(){var a=0,d=this.elements.length,b=d,c;do{c=b-d;if(Math.abs(this.elements[c])>Math.abs(a)){a=this.elements[c]}}while(--d);return a},indexOf:function(a){var c=null,e=this.elements.length,b=e,d;do{d=b-e;if(c===null&&this.elements[d]==a){c=d+1}}while(--e);return c},toDiagonalMatrix:function(){return Matrix.Diagonal(this.elements)},round:function(){return this.map(function(a){return Math.round(a)})},snapTo:function(a){return this.map(function(b){return(Math.abs(b-a)<=Sylvester.precision)?a:b})},distanceFrom:function(d){if(d.anchor){return d.distanceFrom(this)}var a=d.elements||d;if(a.length!=this.elements.length){return null}var c=0,b;this.each(function(e,f){b=e-a[f-1];c+=b*b});return Math.sqrt(c)},liesOn:function(a){return a.contains(this)},liesIn:function(a){return a.contains(this)},rotate:function(c,e){var b,d,a,h,g;switch(this.elements.length){case 2:b=e.elements||e;if(b.length!=2){return null}d=Matrix.Rotation(c).elements;a=this.elements[0]-b[0];h=this.elements[1]-b[1];return Vector.create([b[0]+d[0][0]*a+d[0][1]*h,b[1]+d[1][0]*a+d[1][1]*h]);break;case 3:if(!e.direction){return null}var f=e.pointClosestTo(this).elements;d=Matrix.Rotation(c,e.direction).elements;a=this.elements[0]-f[0];h=this.elements[1]-f[1];g=this.elements[2]-f[2];return Vector.create([f[0]+d[0][0]*a+d[0][1]*h+d[0][2]*g,f[1]+d[1][0]*a+d[1][1]*h+d[1][2]*g,f[2]+d[2][0]*a+d[2][1]*h+d[2][2]*g]);break;default:return null}},reflectionIn:function(c){if(c.anchor){var b=this.elements.slice();var d=c.pointClosestTo(b).elements;return Vector.create([d[0]+(d[0]-b[0]),d[1]+(d[1]-b[1]),d[2]+(d[2]-(b[2]||0))])}else{var a=c.elements||c;if(this.elements.length!=a.length){return null}return this.map(function(e,f){return a[f-1]+(a[f-1]-e)})}},to3D:function(){var a=this.dup();switch(a.elements.length){case 3:break;case 2:a.elements.push(0);break;default:return null}return a},inspect:function(){return"["+this.elements.join(", ")+"]"},setElements:function(a){this.elements=(a.elements||a).slice();return this}};Vector.create=function(b){var a=new Vector();return a.setElements(b)};Vector.i=Vector.create([1,0,0]);Vector.j=Vector.create([0,1,0]);Vector.k=Vector.create([0,0,1]);Vector.Random=function(b){var a=[];do{a.push(Math.random())}while(--b);return Vector.create(a)};Vector.Zero=function(b){var a=[];do{a.push(0)}while(--b);return Vector.create(a)};function Matrix(){}Matrix.prototype={e:function(b,a){if(b<1||b>this.elements.length||a<1||a>this.elements[0].length){return null}return this.elements[b-1][a-1]},row:function(a){if(a>this.elements.length){return null}return Vector.create(this.elements[a-1])},col:function(c){if(c>this.elements[0].length){return null}var b=[],e=this.elements.length,a=e,d;do{d=a-e;b.push(this.elements[d][c-1])}while(--e);return Vector.create(b)},dimensions:function(){return{rows:this.elements.length,cols:this.elements[0].length}},rows:function(){return this.elements.length},cols:function(){return this.elements[0].length},eql:function(a){var h=a.elements||a;if(typeof(h[0][0])=="undefined"){h=Matrix.create(h).elements}if(this.elements.length!=h.length||this.elements[0].length!=h[0].length){return false}var e=this.elements.length,g=e,d,c,f=this.elements[0].length,b;do{d=g-e;c=f;do{b=f-c;if(Math.abs(this.elements[d][b]-h[d][b])>Sylvester.precision){return false}}while(--c)}while(--e);return true},dup:function(){return Matrix.create(this.elements)},map:function(f){var e=[],d=this.elements.length,h=d,c,b,g=this.elements[0].length,a;do{c=h-d;b=g;e[c]=[];do{a=g-b;e[c][a]=f(this.elements[c][a],c+1,a+1)}while(--b)}while(--d);return Matrix.create(e)},isSameSizeAs:function(a){var b=a.elements||a;if(typeof(b[0][0])=="undefined"){b=Matrix.create(b).elements}return(this.elements.length==b.length&&this.elements[0].length==b[0].length)},add:function(a){var b=a.elements||a;if(typeof(b[0][0])=="undefined"){b=Matrix.create(b).elements}if(!this.isSameSizeAs(b)){return null}return this.map(function(c,e,d){return c+b[e-1][d-1]})},subtract:function(a){var b=a.elements||a;if(typeof(b[0][0])=="undefined"){b=Matrix.create(b).elements}if(!this.isSameSizeAs(b)){return null}return this.map(function(c,e,d){return c-b[e-1][d-1]})},canMultiplyFromLeft:function(a){var b=a.elements||a;if(typeof(b[0][0])=="undefined"){b=Matrix.create(b).elements}return(this.elements[0].length==b.length)},multiply:function(q){if(!q.elements){return this.map(function(c){return c*q})}var h=q.modulus?true:false;var n=q.elements||q;if(typeof(n[0][0])=="undefined"){n=Matrix.create(n).elements}if(!this.canMultiplyFromLeft(n)){return null}var e=this.elements.length,f=e,l,b,d=n[0].length,g;var p=this.elements[0].length,a=[],m,k,o;do{l=f-e;a[l]=[];b=d;do{g=d-b;m=0;k=p;do{o=p-k;m+=this.elements[l][o]*n[o][g]}while(--k);a[l][g]=m}while(--b)}while(--e);var n=Matrix.create(a);return h?n.col(1):n},x:function(a){return this.multiply(a)},minor:function(p,o,m,l){var e=[],g=m,k,f,h;var q=this.elements.length,n=this.elements[0].length;do{k=m-g;e[k]=[];f=l;do{h=l-f;e[k][h]=this.elements[(p+k-1)%q][(o+h-1)%n]}while(--f)}while(--g);return Matrix.create(e)},transpose:function(){var f=this.elements.length,g=this.elements[0].length;var e=[],d=g,c,b,a;do{c=g-d;e[c]=[];b=f;do{a=f-b;e[c][a]=this.elements[a][c]}while(--b)}while(--d);return Matrix.create(e)},isSquare:function(){return(this.elements.length==this.elements[0].length)},max:function(){var a=0,e=this.elements.length,g=e,d,c,f=this.elements[0].length,b;do{d=g-e;c=f;do{b=f-c;if(Math.abs(this.elements[d][b])>Math.abs(a)){a=this.elements[d][b]}}while(--c)}while(--e);return a},indexOf:function(a){var d=null,f=this.elements.length,h=f,e,c,g=this.elements[0].length,b;do{e=h-f;c=g;do{b=g-c;if(this.elements[e][b]==a){return{i:e+1,j:b+1}}}while(--c)}while(--f);return null},diagonal:function(){if(!this.isSquare){return null}var c=[],d=this.elements.length,a=d,b;do{b=a-d;c.push(this.elements[b][b])}while(--d);return Vector.create(c)},toRightTriangular:function(){var f=this.dup(),d;var b=this.elements.length,c=b,e,g,h=this.elements[0].length,a;do{e=c-b;if(f.elements[e][e]==0){for(j=e+1;j<c;j++){if(f.elements[j][e]!=0){d=[];g=h;do{a=h-g;d.push(f.elements[e][a]+f.elements[j][a])}while(--g);f.elements[e]=d;break}}}if(f.elements[e][e]!=0){for(j=e+1;j<c;j++){var l=f.elements[j][e]/f.elements[e][e];d=[];g=h;do{a=h-g;d.push(a<=e?0:f.elements[j][a]-f.elements[e][a]*l)}while(--g);f.elements[j]=d}}}while(--b);return f},toUpperTriangular:function(){return this.toRightTriangular()},determinant:function(){if(!this.isSquare()){return null}var e=this.toRightTriangular();var c=e.elements[0][0],d=e.elements.length-1,a=d,b;do{b=a-d+1;c=c*e.elements[b][b]}while(--d);return c},det:function(){return this.determinant()},isSingular:function(){return(this.isSquare()&&this.determinant()===0)},trace:function(){if(!this.isSquare()){return null}var c=this.elements[0][0],d=this.elements.length-1,a=d,b;do{b=a-d+1;c+=this.elements[b][b]}while(--d);return c},tr:function(){return this.trace()},rank:function(){var h=this.toRightTriangular(),g=0;var d=this.elements.length,f=d,c,b,e=this.elements[0].length,a;do{c=f-d;b=e;do{a=e-b;if(Math.abs(h.elements[c][a])>Sylvester.precision){g++;break}}while(--b)}while(--d);return g},rk:function(){return this.rank()},augment:function(l){var h=l.elements||l;if(typeof(h[0][0])=="undefined"){h=Matrix.create(h).elements}var e=this.dup(),k=e.elements[0].length;var c=e.elements.length,d=c,g,a,b=h[0].length,f;if(c!=h.length){return null}do{g=d-c;a=b;do{f=b-a;e.elements[g][k+f]=h[g][f]}while(--a)}while(--c);return e},inverse:function(){if(!this.isSquare()||this.isSingular()){return null}var c=this.elements.length,d=c,h,g;var k=this.augment(Matrix.I(c)).toRightTriangular();var l,m=k.elements[0].length,a,f,b;var n=[],e;do{h=c-1;f=[];l=m;n[h]=[];b=k.elements[h][h];do{a=m-l;e=k.elements[h][a]/b;f.push(e);if(a>=d){n[h].push(e)}}while(--l);k.elements[h]=f;for(g=0;g<h;g++){f=[];l=m;do{a=m-l;f.push(k.elements[g][a]-k.elements[h][a]*k.elements[g][h])}while(--l);k.elements[g]=f}}while(--c);return Matrix.create(n)},inv:function(){return this.inverse()},round:function(){return this.map(function(a){return Math.round(a)})},snapTo:function(a){return this.map(function(b){return(Math.abs(b-a)<=Sylvester.precision)?a:b})},inspect:function(){var c=[];var d=this.elements.length,a=d,b;do{b=a-d;c.push(Vector.create(this.elements[b]).inspect())}while(--d);return c.join("\n")},setElements:function(h){var m,a=h.elements||h;if(typeof(a[0][0])!="undefined"){var d=a.length,f=d,b,c,l;this.elements=[];do{m=f-d;b=a[m].length;c=b;this.elements[m]=[];do{l=c-b;this.elements[m][l]=a[m][l]}while(--b)}while(--d);return this}var e=a.length,g=e;this.elements=[];do{m=g-e;this.elements.push([a[m]])}while(--e);return this}};Matrix.create=function(a){var b=new Matrix();return b.setElements(a)};Matrix.I=function(f){var e=[],a=f,d,c,b;do{d=a-f;e[d]=[];c=a;do{b=a-c;e[d][b]=(d==b)?1:0}while(--c)}while(--f);return Matrix.create(e)};Matrix.Diagonal=function(c){var e=c.length,a=e,b;var d=Matrix.I(e);do{b=a-e;d.elements[b][b]=c[b]}while(--e);return d};Matrix.Rotation=function(b,i){if(!i){return Matrix.create([[Math.cos(b),-Math.sin(b)],[Math.sin(b),Math.cos(b)]])}var d=i.dup();if(d.elements.length!=3){return null}var h=d.modulus();var k=d.elements[0]/h,g=d.elements[1]/h,f=d.elements[2]/h;var m=Math.sin(b),e=Math.cos(b),l=1-e;return Matrix.create([[l*k*k+e,l*k*g-m*f,l*k*f+m*g],[l*k*g+m*f,l*g*g+e,l*g*f-m*k],[l*k*f-m*g,l*g*f+m*k,l*f*f+e]])};Matrix.RotationX=function(a){var d=Math.cos(a),b=Math.sin(a);return Matrix.create([[1,0,0],[0,d,-b],[0,b,d]])};Matrix.RotationY=function(a){var d=Math.cos(a),b=Math.sin(a);return Matrix.create([[d,0,b],[0,1,0],[-b,0,d]])};Matrix.RotationZ=function(a){var d=Math.cos(a),b=Math.sin(a);return Matrix.create([[d,-b,0],[b,d,0],[0,0,1]])};Matrix.Random=function(b,a){return Matrix.Zero(b,a).map(function(){return Math.random()})};Matrix.Zero=function(g,a){var f=[],e=g,d,c,b;do{d=g-e;f[d]=[];c=a;do{b=a-c;f[d][b]=0}while(--c)}while(--e);return Matrix.create(f)};function Line(){}Line.prototype={eql:function(a){return(this.isParallelTo(a)&&this.contains(a.anchor))},dup:function(){return Line.create(this.anchor,this.direction)},translate:function(b){var a=b.elements||b;return Line.create([this.anchor.elements[0]+a[0],this.anchor.elements[1]+a[1],this.anchor.elements[2]+(a[2]||0)],this.direction)},isParallelTo:function(b){if(b.normal){return b.isParallelTo(this)}var a=this.direction.angleFrom(b.direction);return(Math.abs(a)<=Sylvester.precision||Math.abs(a-Math.PI)<=Sylvester.precision)},distanceFrom:function(e){if(e.normal){return e.distanceFrom(this)}if(e.direction){if(this.isParallelTo(e)){return this.distanceFrom(e.anchor)}var i=this.direction.cross(e.direction).toUnitVector().elements;var c=this.anchor.elements,b=e.anchor.elements;return Math.abs((c[0]-b[0])*i[0]+(c[1]-b[1])*i[1]+(c[2]-b[2])*i[2])}else{var f=e.elements||e;var c=this.anchor.elements,a=this.direction.elements;var m=f[0]-c[0],k=f[1]-c[1],g=(f[2]||0)-c[2];var l=Math.sqrt(m*m+k*k+g*g);if(l===0){return 0}var h=(m*a[0]+k*a[1]+g*a[2])/l;var d=1-h*h;return Math.abs(l*Math.sqrt(d<0?0:d))}},contains:function(a){var b=this.distanceFrom(a);return(b!==null&&b<=Sylvester.precision)},liesIn:function(a){return a.contains(this)},intersects:function(a){if(a.normal){return a.intersects(this)}return(!this.isParallelTo(a)&&this.distanceFrom(a)<=Sylvester.precision)},intersectionWith:function(n){if(n.normal){return n.intersectionWith(this)}if(!this.intersects(n)){return null}var l=this.anchor.elements,b=this.direction.elements,i=n.anchor.elements,a=n.direction.elements;var v=b[0],u=b[1],t=b[2],h=a[0],g=a[1],e=a[2];var r=l[0]-i[0],q=l[1]-i[1],p=l[2]-i[2];var m=-v*r-u*q-t*p;var d=h*r+g*q+e*p;var f=v*v+u*u+t*t;var s=h*h+g*g+e*e;var c=v*h+u*g+t*e;var o=(m*s/f+c*d)/(s-c*c);return Vector.create([l[0]+o*v,l[1]+o*u,l[2]+o*t])},pointClosestTo:function(r){if(r.direction){if(this.intersects(r)){return this.intersectionWith(r)}if(this.isParallelTo(r)){return null}var t=this.direction.elements,s=r.direction.elements;var f=t[0],e=t[1],c=t[2],p=s[0],n=s[1],l=s[2];var q=(c*p-f*l),o=(f*n-e*p),m=(e*l-c*n);var i=Vector.create([q*l-o*n,o*p-m*l,m*n-q*p]);var h=Plane.create(r.anchor,i);return h.intersectionWith(this)}else{var h=r.elements||r;if(this.contains(h)){return Vector.create(h)}var u=this.anchor.elements,t=this.direction.elements;var f=t[0],e=t[1],c=t[2],d=u[0],b=u[1],a=u[2];var q=f*(h[1]-b)-e*(h[0]-d),o=e*((h[2]||0)-a)-c*(h[1]-b),m=c*(h[0]-d)-f*((h[2]||0)-a);var g=Vector.create([e*q-c*m,c*o-f*q,f*m-e*o]);var v=this.distanceFrom(h)/g.modulus();return Vector.create([h[0]+g.elements[0]*v,h[1]+g.elements[1]*v,(h[2]||0)+g.elements[2]*v])}},rotate:function(o,p){if(typeof(p.direction)=="undefined"){p=Line.create(p.to3D(),Vector.k)}var g=Matrix.Rotation(o,p.direction).elements;var b=p.pointClosestTo(this.anchor).elements;var d=this.anchor.elements,a=this.direction.elements;var k=b[0],i=b[1],h=b[2],f=d[0],e=d[1],c=d[2];var n=f-k,m=e-i,l=c-h;return Line.create([k+g[0][0]*n+g[0][1]*m+g[0][2]*l,i+g[1][0]*n+g[1][1]*m+g[1][2]*l,h+g[2][0]*n+g[2][1]*m+g[2][2]*l],[g[0][0]*a[0]+g[0][1]*a[1]+g[0][2]*a[2],g[1][0]*a[0]+g[1][1]*a[1]+g[1][2]*a[2],g[2][0]*a[0]+g[2][1]*a[1]+g[2][2]*a[2]])},reflectionIn:function(n){if(n.normal){var f=this.anchor.elements,b=this.direction.elements;var k=f[0],h=f[1],e=f[2],g=b[0],d=b[1],c=b[2];var a=this.anchor.reflectionIn(n).elements;var m=k+g,l=h+d,i=e+c;var o=n.pointClosestTo([m,l,i]).elements;var q=[o[0]+(o[0]-m)-a[0],o[1]+(o[1]-l)-a[1],o[2]+(o[2]-i)-a[2]];return Line.create(a,q)}else{if(n.direction){return this.rotate(Math.PI,n)}else{var p=n.elements||n;return Line.create(this.anchor.reflectionIn([p[0],p[1],(p[2]||0)]),this.direction)}}},setVectors:function(a,c){a=Vector.create(a);c=Vector.create(c);if(a.elements.length==2){a.elements.push(0)}if(c.elements.length==2){c.elements.push(0)}if(a.elements.length>3||c.elements.length>3){return null}var b=c.modulus();if(b===0){return null}this.anchor=a;this.direction=Vector.create([c.elements[0]/b,c.elements[1]/b,c.elements[2]/b]);return this}};Line.create=function(b,c){var a=new Line();return a.setVectors(b,c)};Line.X=Line.create(Vector.Zero(3),Vector.i);Line.Y=Line.create(Vector.Zero(3),Vector.j);Line.Z=Line.create(Vector.Zero(3),Vector.k);function Plane(){}Plane.prototype={eql:function(a){return(this.contains(a.anchor)&&this.isParallelTo(a))},dup:function(){return Plane.create(this.anchor,this.normal)},translate:function(b){var a=b.elements||b;return Plane.create([this.anchor.elements[0]+a[0],this.anchor.elements[1]+a[1],this.anchor.elements[2]+(a[2]||0)],this.normal)},isParallelTo:function(b){var a;if(b.normal){a=this.normal.angleFrom(b.normal);return(Math.abs(a)<=Sylvester.precision||Math.abs(Math.PI-a)<=Sylvester.precision)}else{if(b.direction){return this.normal.isPerpendicularTo(b.direction)}}return null},isPerpendicularTo:function(a){var b=this.normal.angleFrom(a.normal);return(Math.abs(Math.PI/2-b)<=Sylvester.precision)},distanceFrom:function(c){if(this.intersects(c)||this.contains(c)){return 0}if(c.anchor){var a=this.anchor.elements,e=c.anchor.elements,d=this.normal.elements;return Math.abs((a[0]-e[0])*d[0]+(a[1]-e[1])*d[1]+(a[2]-e[2])*d[2])}else{var b=c.elements||c;var a=this.anchor.elements,d=this.normal.elements;return Math.abs((a[0]-b[0])*d[0]+(a[1]-b[1])*d[1]+(a[2]-(b[2]||0))*d[2])}},contains:function(d){if(d.normal){return null}if(d.direction){return(this.contains(d.anchor)&&this.contains(d.anchor.add(d.direction)))}else{var b=d.elements||d;var a=this.anchor.elements,e=this.normal.elements;var c=Math.abs(e[0]*(a[0]-b[0])+e[1]*(a[1]-b[1])+e[2]*(a[2]-(b[2]||0)));return(c<=Sylvester.precision)}},intersects:function(a){if(typeof(a.direction)=="undefined"&&typeof(a.normal)=="undefined"){return null}return !this.isParallelTo(a)},intersectionWith:function(k){if(!this.intersects(k)){return null}if(k.direction){var d=k.anchor.elements,a=k.direction.elements,l=this.anchor.elements,n=this.normal.elements;var r=(n[0]*(l[0]-d[0])+n[1]*(l[1]-d[1])+n[2]*(l[2]-d[2]))/(n[0]*a[0]+n[1]*a[1]+n[2]*a[2]);return Vector.create([d[0]+a[0]*r,d[1]+a[1]*r,d[2]+a[2]*r])}else{if(k.normal){var q=this.normal.cross(k.normal).toUnitVector();var n=this.normal.elements,d=this.anchor.elements,m=k.normal.elements,c=k.anchor.elements;var s=Matrix.Zero(2,2),h=0;while(s.isSingular()){h++;s=Matrix.create([[n[h%3],n[(h+1)%3]],[m[h%3],m[(h+1)%3]]])}var f=s.inverse().elements;var p=n[0]*d[0]+n[1]*d[1]+n[2]*d[2];var o=m[0]*c[0]+m[1]*c[1]+m[2]*c[2];var b=[f[0][0]*p+f[0][1]*o,f[1][0]*p+f[1][1]*o];var g=[];for(var e=1;e<=3;e++){g.push((h==e)?0:b[(e+(5-h)%3)%3])}return Line.create(g,q)}}},pointClosestTo:function(b){var d=b.elements||b;var a=this.anchor.elements,e=this.normal.elements;var c=(a[0]-d[0])*e[0]+(a[1]-d[1])*e[1]+(a[2]-(d[2]||0))*e[2];return Vector.create([d[0]+e[0]*c,d[1]+e[1]*c,(d[2]||0)+e[2]*c])},rotate:function(o,p){var f=Matrix.Rotation(o,p.direction).elements;var a=p.pointClosestTo(this.anchor).elements;var c=this.anchor.elements,k=this.normal.elements;var i=a[0],h=a[1],g=a[2],e=c[0],d=c[1],b=c[2];var n=e-i,m=d-h,l=b-g;return Plane.create([i+f[0][0]*n+f[0][1]*m+f[0][2]*l,h+f[1][0]*n+f[1][1]*m+f[1][2]*l,g+f[2][0]*n+f[2][1]*m+f[2][2]*l],[f[0][0]*k[0]+f[0][1]*k[1]+f[0][2]*k[2],f[1][0]*k[0]+f[1][1]*k[1]+f[1][2]*k[2],f[2][0]*k[0]+f[2][1]*k[1]+f[2][2]*k[2]])},reflectionIn:function(f){if(f.normal){var c=this.anchor.elements,k=this.normal.elements;var e=c[0],d=c[1],b=c[2],n=k[0],m=k[1],l=k[2];var a=this.anchor.reflectionIn(f).elements;var q=e+n,p=d+m,o=b+l;var h=f.pointClosestTo([q,p,o]).elements;var g=[h[0]+(h[0]-q)-a[0],h[1]+(h[1]-p)-a[1],h[2]+(h[2]-o)-a[2]];return Plane.create(a,g)}else{if(f.direction){return this.rotate(Math.PI,f)}else{var i=f.elements||f;return Plane.create(this.anchor.reflectionIn([i[0],i[1],(i[2]||0)]),this.normal)}}},setVectors:function(i,o,n){i=Vector.create(i);i=i.to3D();if(i===null){return null}o=Vector.create(o);o=o.to3D();if(o===null){return null}if(typeof(n)=="undefined"){n=null}else{n=Vector.create(n);n=n.to3D();if(n===null){return null}}var f=i.elements[0],e=i.elements[1],d=i.elements[2];var k=o.elements[0],h=o.elements[1],g=o.elements[2];var l,m;if(n!==null){var c=n.elements[0],b=n.elements[1],a=n.elements[2];l=Vector.create([(h-e)*(a-d)-(g-d)*(b-e),(g-d)*(c-f)-(k-f)*(a-d),(k-f)*(b-e)-(h-e)*(c-f)]);m=l.modulus();if(m===0){return null}l=Vector.create([l.elements[0]/m,l.elements[1]/m,l.elements[2]/m])}else{m=Math.sqrt(k*k+h*h+g*g);if(m===0){return null}l=Vector.create([o.elements[0]/m,o.elements[1]/m,o.elements[2]/m])}this.anchor=i;this.normal=l;return this}};Plane.create=function(a,d,c){var b=new Plane();return b.setVectors(a,d,c)};Plane.XY=Plane.create(Vector.Zero(3),Vector.k);Plane.YZ=Plane.create(Vector.Zero(3),Vector.i);Plane.ZX=Plane.create(Vector.Zero(3),Vector.j);Plane.YX=Plane.XY;Plane.ZY=Plane.YZ;Plane.XZ=Plane.ZX;var $V=Vector.create;var $M=Matrix.create;var $L=Line.create;var $P=Plane.create;